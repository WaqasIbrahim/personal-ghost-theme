/*! normalize.css v7.0.0 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,footer,header,nav,section{display:block}h1{font-size:2em;margin:.67em 0}figcaption,figure,main{display:block}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}audio,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details,menu{display:block}summary{display:list-item}canvas{display:inline-block}[hidden],template{display:none}code[class*=language-],pre[class*=language-]{color:#393a34;font-family:Consolas,Bitstream Vera Sans Mono,Courier New,Courier,monospace;direction:ltr;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;font-size:.95em;line-height:1.2em;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-ms-hyphens:none;hyphens:none}code[class*=language-]::-moz-selection,code[class*=language-] ::-moz-selection,pre[class*=language-]::-moz-selection,pre[class*=language-] ::-moz-selection{background:#b3d4fc}code[class*=language-]::selection,code[class*=language-] ::selection,pre[class*=language-]::selection,pre[class*=language-] ::selection{background:#b3d4fc}pre[class*=language-]{padding:1em;margin:.5em 0;overflow:auto;border:1px solid #eee;background-color:#fdfdfd}:not(pre)>code[class*=language-]{padding:.2em;padding-top:1px;padding-bottom:1px;background:#f8f8f8;border:1px solid #ddd}.token.cdata,.token.comment,.token.doctype,.token.prolog{color:#998;font-style:italic}.token.namespace{opacity:.7}.token.attr-value,.token.string{color:#e3116c}.token.operator,.token.punctuation{color:#393a34}.token.boolean,.token.constant,.token.entity,.token.inserted,.token.number,.token.property,.token.regex,.token.symbol,.token.url,.token.variable{color:#36acaa}.language-autohotkey .token.selector,.token.atrule,.token.attr-name,.token.keyword{color:#00a4db}.language-autohotkey .token.tag,.token.deleted,.token.function{color:#9a050f}.language-autohotkey .token.keyword,.token.selector,.token.tag{color:#00009f}.token.bold,.token.function,.token.important{font-weight:700}.token.italic{font-style:italic}pre.line-numbers{padding-left:3.8em;counter-reset:a}pre.line-numbers,pre.line-numbers>code{position:relative}.line-numbers .line-numbers-rows{position:absolute;pointer-events:none;top:0;font-size:100%;left:-3.8em;width:3em;letter-spacing:-1px;border-right:1px solid #eee;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.line-numbers-rows>span{pointer-events:none;display:block;counter-increment:a}.line-numbers-rows>span:before{content:counter(a);color:#bbb;display:block;padding-right:.8em;text-align:right}.token a{color:inherit}html{box-sizing:border-box;min-width:320px}*,:after,:before{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;-webkit-tap-highlight-color:rgba(255,255,255,0);-webkit-tap-highlight-color:transparent;box-sizing:inherit;padding:0;margin:0;border:0}audio,canvas,iframe,img,svg,video{vertical-align:middle}textarea{resize:vertical}hr{display:block;width:100%;height:.066667rem;min-height:1px;margin:1.618em 0;background:#ddd;border:0;clear:both}img{max-width:100%;height:auto}html{font-size:100%}body{font-family:Open Sans,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,sans-serif;font-size:1em;font-weight:400;line-height:1.618em;color:#4a4a4a}p{margin-bottom:1.3em}h1,h2,h3,h4,h5,h6{margin:1.414em 0 .5em;line-height:1.2;font-weight:700;color:#333}h1{margin-top:0;font-size:2.5em}h2{font-size:2em}h3{font-size:1.75em}h4{font-size:1.5em}h5{font-size:1.25em}h6{font-size:1em}small{font-size:.75em}a{background:transparent;text-decoration:none;color:#466db2;display:inline-block}a:active,a:focus{outline:1px dotted #bbb}a:hover{outline:0;color:#2d5499}label{display:table;padding:.25em 0}input{line-height:inherit;font-family:inherit}input[type=email],input[type=tel],input[type=text],textarea{width:100%;max-width:24rem;border:1px solid #ddd;padding:.382em .618em;border-radius:2px}input[type=email]:focus,input[type=tel]:focus,input[type=text]:focus,textarea:focus{outline:0;border-color:#8ca5d2}textarea{max-width:100%}input[type=submit]:active,input[type=submit]:focus{outline:0}.container{width:100%;max-width:768px;margin:0 auto}@media only screen and (max-width:819.776px){.container{padding:0 1.618rem}}.clearfix:after{content:"";display:table;clear:both}.visually-hidden{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}.site-header{width:100%;max-width:83.236rem;margin:0 auto;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:2.61792rem 1.618rem}@media only screen and (max-width:768px){.site-header{padding:1.618rem}}#nav-toggle,.brand{position:relative;z-index:100}.brand a,.brand h1{display:block;margin:0;font-size:1.5rem;color:#333;font-weight:400;line-height:1.5}.brand .logo{height:3rem;width:auto}#nav-toggle{margin-left:auto}@media screen and (min-width:768px){#nav-toggle{display:none}}.nav{margin-left:auto}.nav ul{list-style:none}.nav ul li{display:inline-block;margin-left:1.618em}.nav ul li a{color:#4a4a4a;text-transform:uppercase;font-weight:300;letter-spacing:1px}.nav ul li.current a,.nav ul li a:hover{color:#466db2}@media screen and (max-width:768px){.nav{display:none;width:100%;height:100%;position:fixed;top:0;left:0;z-index:99;background:#fff;overflow-y:auto}.nav ul{padding-top:8.23585rem;padding-right:1.618rem}.nav ul li{display:block;margin-left:0;text-align:right}.nav ul li a{font-size:2em;margin-bottom:1.618em}}.nav-open{overflow:hidden}.nav-open .nav{display:block}.site-footer{padding-bottom:1.618rem}.copyrights,.powered-by{margin:0;font-size:.875em;text-align:center;color:#999}.copyrights a,.powered-by a{color:#999;font-weight:400}.hamburger-icon{width:2rem;height:1.25rem;position:relative;display:block}.hamburger-icon:active,.hamburger-icon:focus{outline:0}.hamburger-icon .line{display:block;background:#466db2;width:100%;height:2px;position:absolute;left:0;transition:all .4s}.hamburger-icon .line.line-1{top:0}.hamburger-icon .line.line-2{top:50%}.hamburger-icon .line.line-3{top:100%}.hamburger-icon.active .line-1{-webkit-transform:translateY(.625rem) rotate(45deg);transform:translateY(.625rem) rotate(45deg)}.hamburger-icon.active .line-2{opacity:0}.hamburger-icon.active .line-3{-webkit-transform:translateY(-.625rem) rotate(-45deg);transform:translateY(-.625rem) rotate(-45deg)}.posts{margin-bottom:2.61792rem}.posts article{border-bottom:1px solid #ececec;margin-bottom:4.2358rem}.posts article .tags a{color:#4a4a4a;font-size:1.125em;font-style:italic}.posts article h2{font-size:2.25em;margin-top:.125em;margin-bottom:.25em}.posts article h2 a{color:#333}.posts article h2 a:hover{color:#466db2}.posts article .meta a{color:#4a4a4a}.posts article .meta img{max-width:1.5rem;max-height:1.5rem;border-radius:50%}.posts article .excerpt{padding:1.618em 0;line-height:1.7em;text-align:justify}.pagination{text-align:center;position:relative}.pagination a{color:#4a4a4a;border:0;text-transform:uppercase;font-weight:300;letter-spacing:1px}.pagination a:hover{color:#466db2}@media only screen and (max-width:768px){.pagination{padding-bottom:1.618rem}}.newer-posts,.older-posts{position:absolute;top:0}@media only screen and (max-width:768px){.newer-posts,.older-posts{top:1.618rem}}.older-posts{right:0}.newer-posts{left:0}.button{display:inline-block;border:0;color:#fff;text-transform:uppercase;padding:.618em 1.618em;letter-spacing:1px;font-weight:300;background-color:#466db2;cursor:pointer}.button:hover{color:#fff;background-color:#2d5499}.banner{text-align:center;padding:3.236rem 0;padding:8vw 0;margin-bottom:3.236rem;background-color:#f4f4f4;background-size:cover;background-position:50%;border-top:1px solid #eee;border-bottom:1px solid #eee}.banner img{display:block;margin:-2.5vw auto 0;border-radius:50%;max-width:9rem}.banner h1{font-size:3.5em;text-transform:uppercase;margin:0 0 .25em}.banner h2{font-size:1.25em;font-weight:300;line-height:1.5;margin:0}.banner ul{list-style:none;margin:1.618rem 0 -2.5vw}.banner ul li{display:inline-block;margin:0 .618rem}.banner.cover{border:0;position:relative;z-index:2}.banner.cover:before{content:"";display:block;position:absolute;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,.65);z-index:-1}.banner.cover h1,.banner.cover h2,.banner.cover ul li a{color:#f4f4f4}.single-post{overflow:hidden;margin-bottom:2.427rem}.single-post.page{margin-bottom:1.618rem}.single-post .feature-image{margin:0;margin-bottom:1rem}@media only screen and (max-width:768px){.single-post .feature-image{width:calc(100% + 3.236rem);margin-left:-1.618rem}}.single-post header{padding-bottom:1rem;border-bottom:1px solid #eee}.single-post.page header{padding-bottom:0;border-bottom:0}.single-post .title{font-size:3em;line-height:1.3;margin-bottom:.25em}.single-post.page .title{font-size:3.5em;margin-bottom:0}.single-post .meta{margin-bottom:0}.single-post .meta a{color:#4a4a4a}.single-post .meta img{max-width:1.5rem;max-height:1.5rem;border-radius:50%}.single-post .content{padding-top:1.618rem}.single-post .content p{line-height:1.7em;text-align:justify}.single-post .content a{font-weight:700}.single-post .content ol,.single-post .content ul{margin:0 1.875em 1.875em;line-height:1.7em}.single-post .content blockquote{position:relative}.single-post .content blockquote p{font-size:1.375em;font-style:italic;text-align:center;color:#777}.single-post .content blockquote:before{content:"";position:absolute;top:-1rem;left:-2rem;display:block;width:4rem;height:4rem;background-image:url("data:image/svg+xml;utf8;base64,PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iaXNvLTg4NTktMSI/Pgo8IS0tIEdlbmVyYXRvcjogQWRvYmUgSWxsdXN0cmF0b3IgMTYuMC4wLCBTVkcgRXhwb3J0IFBsdWctSW4gLiBTVkcgVmVyc2lvbjogNi4wMCBCdWlsZCAwKSAgLS0+CjwhRE9DVFlQRSBzdmcgUFVCTElDICItLy9XM0MvL0RURCBTVkcgMS4xLy9FTiIgImh0dHA6Ly93d3cudzMub3JnL0dyYXBoaWNzL1NWRy8xLjEvRFREL3N2ZzExLmR0ZCI+CjxzdmcgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgdmVyc2lvbj0iMS4xIiBpZD0iQ2FwYV8xIiB4PSIwcHgiIHk9IjBweCIgd2lkdGg9IjY0cHgiIGhlaWdodD0iNjRweCIgdmlld0JveD0iMCAwIDUwOC4wNDQgNTA4LjA0NCIgc3R5bGU9ImVuYWJsZS1iYWNrZ3JvdW5kOm5ldyAwIDAgNTA4LjA0NCA1MDguMDQ0OyIgeG1sOnNwYWNlPSJwcmVzZXJ2ZSI+CjxnPgoJPGc+CgkJPHBhdGggZD0iTTAuMTA4LDM1Mi41MzZjMCw2Ni43OTQsNTQuMTQ0LDEyMC45MzgsMTIwLjkzNywxMjAuOTM4YzY2Ljc5NCwwLDEyMC45MzgtNTQuMTQ0LDEyMC45MzgtMTIwLjkzOCAgICBzLTU0LjE0NC0xMjAuOTM3LTEyMC45MzgtMTIwLjkzN2MtMTMuNzI3LDAtMjYuODY3LDIuMzkzLTM5LjE2OCw2LjYxQzEwOS4wOTMsODIuMTE4LDIzMC44MTQtMTguNTQzLDExNy45NzksNjQuMzAzICAgIEMtNy4xMzgsMTU2LjE3LTAuMDI2LDM0OC44NCwwLjExNCwzNTIuMzcxQzAuMTE0LDM1Mi40MjYsMC4xMDgsMzUyLjQ3NSwwLjEwOCwzNTIuNTM2eiIgZmlsbD0iIzQ2NmRiMiIvPgoJCTxwYXRoIGQ9Ik0yNjYuMTY5LDM1Mi41MzZjMCw2Ni43OTQsNTQuMTQ0LDEyMC45MzgsMTIwLjkzOCwxMjAuOTM4czEyMC45MzgtNTQuMTQ0LDEyMC45MzgtMTIwLjkzOFM0NTMuOSwyMzEuNTk5LDM4Ny4xMDYsMjMxLjU5OSAgICBjLTEzLjcyOCwwLTI2Ljg2NywyLjM5My0zOS4xNjgsNi42MUMzNzUuMTU0LDgyLjExOCw0OTYuODc1LTE4LjU0MywzODQuMDQsNjQuMzAzQzI1OC45MjMsMTU2LjE3LDI2Ni4wMzQsMzQ4Ljg0LDI2Ni4xNzUsMzUyLjM3MSAgICBDMjY2LjE3NSwzNTIuNDI2LDI2Ni4xNjksMzUyLjQ3NSwyNjYuMTY5LDM1Mi41MzZ6IiBmaWxsPSIjNDY2ZGIyIi8+Cgk8L2c+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPC9zdmc+Cg==");background-size:100%;opacity:.2}@media only screen and (max-width:768px){.single-post .content blockquote p{font-size:1.125em}.single-post .content blockquote:before{width:3rem;height:3rem;left:-1.5rem}}.single-post .content mark{background:#fff9c4}.single-post .content code{padding:.125em .325em;line-height:1em;background:#e5eff5;border-radius:3px;text-align:left}.single-post .content pre{overflow-x:auto;margin:1.618rem 0;max-width:100%;line-height:1.5em;border-radius:5px;font-size:.875em}.single-post .content pre code{padding:0;line-height:inherit;background:transparent}.single-post .content img[src$="#full"]{width:100vw;max-width:none;position:relative;left:50%;margin-left:-50vw}.single-post .content iframe{margin:0 auto 1.618rem;display:block}.single-post .content .embed-responsive{position:relative;display:block;width:100%;padding:0;overflow:hidden}.single-post .content .embed-responsive:before{content:"";display:block;padding-top:56.25%}.single-post .content .embed-responsive embed,.single-post .content .embed-responsive iframe,.single-post .content .embed-responsive object,.single-post .content .embed-responsive video{position:absolute;top:0;bottom:0;left:0;width:100%;height:100%;border:0}.single-post .content .embed-responsive.full{width:100vw;left:50%;margin-left:-50vw}.single-post .share{margin:.325em 0 1.618rem;text-align:right}.single-post .share .icon{width:2rem}.single-post .comments{border-top:1px solid #eee;padding-top:.25rem}.single-post .load-comments{text-align:center;margin:0}.single-post .load-comments .button{margin-top:1.368rem}@media screen and (max-width:768px){.nav{-webkit-transform:translateZ(0)}}
/*# sourceMappingURL=data:application/json;base64, */
